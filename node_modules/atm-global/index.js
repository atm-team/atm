var extend = require('extend');
var lib = require('atm-lib');
var defaults = require('./src/defaults.js');
var os = require('os');
var homedir = os.homedir();

var serverConfigs = null ;
module.exports = {

    /**
     * 返回服务器配置信息,修改后需要重启服务器
     * @param unCache 不使用缓存时需要传递true
     * @returns {object}
     */
    getServerConfigs: function (unCache) {
        if (serverConfigs && !unCache) {
            return serverConfigs;
        }

        // 获取 ~/.atm/server.json里面的配置
        var serverConfigsPath = path.join(homedir, '.atm/server.json');

        if (lib.exists(serverConfigsPath)) {
            serverConfigs = extend(true, {},
                defaults.serverConfigs,
                lib.getJson(serverConfigsPath)
            );
        } else {
            serverConfigs = defaults.serverConfigs;
        }
        var maps = serverConfigs.maps;
        for(var siteName in maps) {
            maps[siteName] = lib.replacePlaceholder(maps[siteName], {homedir: homedir});
        }
        if (serverConfigs.https.status) {
            var optionsFiles = serverConfigs.https.files;
            for (var key in optionsFiles) {
                try {
                    optionsFiles[key] = lib.replacePlaceholder(optionsFiles[key], {homedir: homedir});
                    serverConfigs.https.options[key] = fs.readFileSync(optionsFiles[key]);
                } catch(err) {
                    throw err;
                }
            }
        }
        return serverConfigs;
    },

    /**
     * 获取站点与站点开发路径的关系地图
     * @param unCache 不使用缓存时需要传递true
     * @returns {object}
     */
    getMaps: function (unCache) {
        var settings = this.getServerConfigs(unCache);
        return settings.maps || {};
    },


    /**
     * 根据站点名称返回站点的开发路径
     * @param siteName
     * @returns {string}
     */
    getSitePath: function (siteName) {
        var maps = this.getMaps();
        var sitePath = maps[siteName];
        if (sitePath) {
            return lib.replacePlaceholder(sitePath, {site: sitePath});
        } else {
            maps = this.getMaps(true);
            sitePath = maps[siteName];
            if (!sitePath) {
                throw new Error('请先在' + path.join(homedir, '.atm/server.json') + '的maps字段中配置' + siteName + '对应的路径' );
                return '';
            }
        }
    },

    /**
     * 获取http端口
     * @returns {number}
     */
    getHttpPort: function () {
        var settings = this.getServerConfigs();
        return settings.port;
    },

    /**
     * 获取https相关配置
     * @returns {object}
     */
    getHttpsConfigs: function () {
        var settings = this.getServerConfigs();
        return settings.https;
    },


    /**
     * 获取构建命令
     * @param target
     * @returns {string}
     */
    getBuildCmd: function (target) {
        return 'atmjs release ' + target + ' -cu';
    }
}